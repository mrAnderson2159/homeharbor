"""migrazione iniziale definitiva

Revision ID: 6c72a6fd09d0
Revises: 
Create Date: 2025-03-10 23:58:12.331948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6c72a6fd09d0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_categories_name'), 'categories', ['name'], unique=True, schema='scansione_documenti')
    op.create_table('document_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_document_types_name'), 'document_types', ['name'], unique=True, schema='scansione_documenti')
    op.create_table('documents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_table('excluded_paths',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_excluded_paths_path'), 'excluded_paths', ['path'], unique=True, schema='scansione_documenti')
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_tags_name'), 'tags', ['name'], unique=True, schema='scansione_documenti')
    op.create_table('utilities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_utilities_name'), 'utilities', ['name'], unique=True, schema='scansione_documenti')
    op.create_table('years',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='scansione_documenti'
    )
    op.create_index(op.f('ix_scansione_documenti_years_name'), 'years', ['name'], unique=True, schema='scansione_documenti')
    op.create_table('document_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['scansione_documenti.documents.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['scansione_documenti.tags.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'tag_id', name='unique_document_tag'),
    schema='scansione_documenti'
    )
    op.create_table('paths',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.Integer(), nullable=False),
    sa.Column('utility', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.Integer(), nullable=False),
    sa.Column('document', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category'], ['scansione_documenti.categories.id'], ),
    sa.ForeignKeyConstraint(['document'], ['scansione_documenti.documents.id'], ),
    sa.ForeignKeyConstraint(['document_type'], ['scansione_documenti.document_types.id'], ),
    sa.ForeignKeyConstraint(['utility'], ['scansione_documenti.utilities.id'], ),
    sa.ForeignKeyConstraint(['year'], ['scansione_documenti.years.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('category', 'utility', 'year', 'document_type', 'document', name='unique_path_constraint'),
    schema='scansione_documenti'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('paths', schema='scansione_documenti')
    op.drop_table('document_tags', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_years_name'), table_name='years', schema='scansione_documenti')
    op.drop_table('years', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_utilities_name'), table_name='utilities', schema='scansione_documenti')
    op.drop_table('utilities', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_tags_name'), table_name='tags', schema='scansione_documenti')
    op.drop_table('tags', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_excluded_paths_path'), table_name='excluded_paths', schema='scansione_documenti')
    op.drop_table('excluded_paths', schema='scansione_documenti')
    op.drop_table('documents', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_document_types_name'), table_name='document_types', schema='scansione_documenti')
    op.drop_table('document_types', schema='scansione_documenti')
    op.drop_index(op.f('ix_scansione_documenti_categories_name'), table_name='categories', schema='scansione_documenti')
    op.drop_table('categories', schema='scansione_documenti')
    # ### end Alembic commands ###
